# beipack https://github.com/allisonkarlitskaya/beipack

from binascii import a2b_base64
import importlib.abc
import importlib.util
import sys


class BeipackLoader(importlib.abc.SourceLoader, importlib.abc.MetaPathFinder):
    def __init__(self, contents):
        try:
            contents[__file__] = __self_source__
        except NameError:
            pass

        self.contents = contents
        self.modules = {
            self.get_fullname(filename): filename
            for filename in contents
            if filename.endswith(".py")
        }

    def get_fullname(self, filename):
        assert filename.endswith(".py")
        filename = filename[:-3]
        if filename.endswith("/__init__"):
            filename = filename[:-9]
        return filename.replace("/", ".")

    def get_data(self, path):
        return self.contents[path]

    def get_filename(self, fullname):
        return self.modules[fullname]

    def find_spec(self, fullname, path, target=None):
        if fullname not in self.modules:
            return None
        return importlib.util.spec_from_loader(fullname, self)
